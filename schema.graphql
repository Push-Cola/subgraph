type User @entity(immutable: true) {
  id: Bytes!
  projects: [Project!]! @derivedFrom(field: "creator")
  ownedCoupons: [Coupon!]! @derivedFrom(field: "owner")
  claimedCoupons: [TokenClaimed!]! @derivedFrom(field: "receiver")
  claimedInProjects: [Project!]! @derivedFrom(field: "uniqueClaimers")
  affiliateFor: [Affiliate!]! @derivedFrom(field: "user")
}

type Project @entity(immutable: false) {
  id: Bytes!
  creator: User!
  name: String!
  createdAt: BigInt!
  coupons: [Coupon!]! @derivedFrom(field: "project")
  claims: [TokenClaimed!]! @derivedFrom(field: "project")
  uniqueClaimers: [User!]!
  totalClaims: BigInt!
  totalBudgetLocked: BigInt!
  totalAffiliatePayments: BigInt!
}

type Coupon @entity(immutable: false) {
  id: Bytes!
  project: Project!
  owner: User!
  metadata: TokenMetadata
  lazyMintAddress: Bytes!
  uri: String!
  maxSupply: BigInt!
  lockedBudget: BigInt!
  claimExpiration: BigInt!
  redeemExpiration: BigInt!
  currencyAddress: Bytes!
  fee: BigInt!
  tokenId: BigInt!
  isRedeemed: Boolean!
  totalAffiliatePayments: BigInt!
  affiliates: [Affiliate!]! @derivedFrom(field: "coupon")
  claims: [TokenClaimed!]! @derivedFrom(field: "coupon")
  redemptions: [CouponRedeemed!]! @derivedFrom(field: "coupon")
}

type Affiliate @entity(immutable: true) {
  id: Bytes!
  user: User! 
  coupon: Coupon!
  timestamp: BigInt!
  claims: [TokenClaimed!]! @derivedFrom(field: "affiliate")
  totalClaims: BigInt!
  uniqueClaimers: [User!]!
  totalRedemptions: BigInt!
  totalEarnings: BigInt!
  totalPaidOut: BigInt!
  pendingPayments: BigInt!
}

type TokenMetadata @entity {
  id: ID!
  name: String!
  description: String
  image: String
  backgroundColor: String
  textColor: String
  visibility: String
  category: String
  location: Location
  claimStartDate: BigInt
  claimExpirationDate: BigInt
  couponExpirationDate: BigInt
  attributes: [Attribute!]
}

type Location @entity {
  id: ID!
  address1: String
  address2: String
  formattedAddress: String
  city: City!
  region: String
  postalCode: String
  country: Country!
  lat: BigDecimal
  lng: BigDecimal
  coupons: [TokenMetadata!]! @derivedFrom(field: "location")
}

type City @entity {
  id: Bytes!
  name: String!
  region: String
  country: Country!
  locations: [Location!]! @derivedFrom(field: "city")
  totalCoupons: BigInt!
}

type Country @entity {
  id: Bytes!
  name: String!
  code: String!
  cities: [City!]! @derivedFrom(field: "country")
  locations: [Location!]! @derivedFrom(field: "country")
  totalCoupons: BigInt!
}

type Attribute @entity {
  id: ID!
  traitType: String
  value: String
}

type CouponRedeemed @entity(immutable: true) {
  id: Bytes!
  coupon: Coupon!
  owner: User!
  affiliate: Affiliate
  feeAmount: BigInt!
  timestamp: BigInt!
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type TokenClaimed @entity(immutable: true) {
  id: Bytes!
  project: Project!
  coupon: Coupon!
  claimer: Bytes!
  receiver: User!
  quantity: BigInt!
  affiliate: Affiliate
  timestamp: BigInt!
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
